pipeline {
    agent any
    environment {
        AZURE_CREDENTIALS = credentials('azurejt') // Fetch stored Jenkins credential
    }
    stages {

        stage('Setup Azure Credentials') {
            steps {
                withCredentials([
                    azureServicePrincipal(
                        credentialsId: 'azurejt',
                        subscriptionIdVariable: 'AZURE_SUBSCRIPTION_ID',
                        clientIdVariable: 'AZURE_CLIENT_ID',
                        clientSecretVariable: 'AZURE_CLIENT_SECRET',
                        tenantIdVariable: 'AZURE_TENANT_ID'
                    )
                ]) {
                    script {
                        sh '''
                        export ARM_CLIENT_ID=$AZURE_CLIENT_ID
                        export ARM_CLIENT_SECRET=$AZURE_CLIENT_SECRET
                        export ARM_SUBSCRIPTION_ID=$AZURE_SUBSCRIPTION_ID
                        export ARM_TENANT_ID=$AZURE_TENANT_ID
                        '''
                    }
                }
            }
        }
        // stage('Verify') {
        //     steps {
        //         sh 'echo "Subscription ID: $TF_VAR_subscription_id"'
        //     }
        // }
        stage('Checkout Code') {
            steps {
                git branch: 'terraform', url: 'https://github.com/AkashPratap/devops_practice.git'
            }
        }

        stage('Install Dependencies') {
            steps {
                script {
                    sh '''
                    sudo apt update && sudo apt install -y unzip
                    '''
                }
            }
        }

        stage('Install Azure CLI') {
            steps {
                sh '''
                if ! command -v az &> /dev/null; then
                    echo "Azure CLI not found. Installing..."
                    curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
                else
                    echo "Azure CLI is already installed."
                fi
                az version
                '''
            }
        }

        stage('Install Terraform') {
            steps {
                sh '''
                if ! command -v terraform &> /dev/null; then
                    echo "Installing Terraform..."
                    wget https://releases.hashicorp.com/terraform/1.6.0/terraform_1.6.0_linux_amd64.zip
                    unzip terraform_1.6.0_linux_amd64.zip
                    sudo mv terraform /usr/local/bin/
                fi
                terraform version
                '''
            }
        }

        stage('Terraform Init') {
            steps {
                sh '''
                az logout
                terraform init
                '''
            }
        }

        stage('Terraform Plan') {
            steps {
                sh 'terraform plan -out=tfplan'
            }
        }

        stage('Terraform Apply') {
            steps {
                sh 'terraform apply -auto-approve tfplan'
            }
        }
    }
}