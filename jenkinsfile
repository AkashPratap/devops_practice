pipeline {
    agent any
    environment {
        AZURE_CREDENTIALS = credentials('azurejt')
    }
    stages {
        

        stage('Checkout Code') {
            steps {
                git branch: 'terraform', url: 'https://github.com/AkashPratap/devops_practice.git'
            }
        }

        stage('Install Dependencies') {
            steps {
                sh '''
                sudo apt update
                sudo apt install -y unzip curl wget
                '''
            }
        }

        stage('Install Azure CLI') {
            steps {
                sh '''
                if ! command -v az &> /dev/null; then
                    echo "Azure CLI not found. Installing..."
                    curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
                else
                    echo "Azure CLI is already installed."
                fi
                az version
                '''
            }
        }

        stage('Install Terraform') {
            steps {
                sh '''
                if ! command -v terraform &> /dev/null; then
                    echo "Installing Terraform..."
                    wget https://releases.hashicorp.com/terraform/1.6.0/terraform_1.6.0_linux_amd64.zip
                    unzip terraform_1.6.0_linux_amd64.zip
                    sudo mv terraform /usr/local/bin/
                fi
                terraform version
                '''
            }
        }

        stage('Terraform Init & Apply') {
            steps {
                withCredentials([azureServicePrincipal(credentialsId: 'azurejt')]) {
                    sh 'az login --service-principal -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET -t $AZURE_TENANT_ID'
                    sh 'az aks list' // Example Azure CLI command

                    sh '''
                    export ARM_CLIENT_ID=$AZURE_CLIENT_ID
                    export ARM_CLIENT_SECRET=$AZURE_CLIENT_SECRET
                    export ARM_SUBSCRIPTION_ID=$AZURE_SUBSCRIPTION_ID
                    export ARM_TENANT_ID=$AZURE_TENANT_ID

                    export TF_VAR_client_id=$AZURE_CLIENT_ID
                    export TF_VAR_client_secret=$AZURE_CLIENT_SECRET
                    export TF_VAR_subscription_id=$AZURE_SUBSCRIPTION_ID
                    export TF_VAR_tenant_id=$AZURE_TENANT_ID

                    terraform init  -force-copy 
                    terraform apply -auto-approve
                    '''
                }
            }
                
        }
    }
    post {
        success {
            withCredentials([azureServicePrincipal(credentialsId: 'azurejt')]) {
            sh '''
            export ARM_CLIENT_ID=$AZURE_CLIENT_ID
            export ARM_CLIENT_SECRET=$AZURE_CLIENT_SECRET
            export ARM_SUBSCRIPTION_ID=$AZURE_SUBSCRIPTION_ID
            export ARM_TENANT_ID=$AZURE_TENANT_ID

            export TF_VAR_client_id=$AZURE_CLIENT_ID
            export TF_VAR_client_secret=$AZURE_CLIENT_SECRET
            export TF_VAR_subscription_id=$AZURE_SUBSCRIPTION_ID
            export TF_VAR_tenant_id=$AZURE_TENANT_ID
            
            terraform destroy -auto-approve
            '''
            }
        }
    }
}
